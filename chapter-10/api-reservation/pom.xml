<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.0</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.twa</groupId>
	<artifactId>api-reservation</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>api-reservation</name>
	<description>API which manage everything about the reservations</description>
	<properties>
		<java.version>17</java.version>
		<maven.version>3.8.3</maven.version>

		<mapstruct.version>1.5.5.Final</mapstruct.version>

		<archunit-junit5.version>1.2.1</archunit-junit5.version>
		<testcontainers.version>1.19.7</testcontainers.version>
		<karate.version>1.4.1</karate.version>
		<pitest-maven.version>1.7.6</pitest-maven.version>
		<quickperf.version>1.1.0</quickperf.version>

		<pitest-junit5-plugin.version>0.15</pitest-junit5-plugin.version>
		<maven.surefire.version>3.1.2</maven.surefire.version>
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<maven-enforcer-plugin.version>3.0.0-M2</maven-enforcer-plugin.version>
		<spotless-maven-plugin.version>2.43.0</spotless-maven-plugin.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
			<version>4.20.0</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>

		<dependency>
			<groupId>com.github.ben-manes.caffeine</groupId>
			<artifactId>caffeine</artifactId>
		</dependency>

		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-spring-boot3</artifactId>
			<version>2.1.0</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-logging</artifactId>
		</dependency>

		<dependency>
			<groupId>com.github.loki4j</groupId>
			<artifactId>loki-logback-appender</artifactId>
			<version>1.4.1</version>
		</dependency>

		<!-- OpenTelemetry -->
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-exporter-otlp</artifactId>
			<version>1.33.0</version>
		</dependency>

		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-sdk-extension-autoconfigure</artifactId>
			<version>1.33.0</version>
		</dependency>

		<dependency>
			<groupId>io.opentelemetry.instrumentation</groupId>
			<artifactId>opentelemetry-spring-boot-starter</artifactId>
			<version>1.33.0-alpha</version>
		</dependency>

		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.tngtech.archunit</groupId>
			<artifactId>archunit-junit5</artifactId>
			<version>${archunit-junit5.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.tngtech.archunit</groupId>
			<artifactId>archunit-junit5-api</artifactId>
			<version>${archunit-junit5.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.intuit.karate</groupId>
			<artifactId>karate-junit5</artifactId>
			<version>${karate.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.intuit.karate</groupId>
			<artifactId>karate-gatling</artifactId>
			<version>${karate.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>${testcontainers.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- QuickPerf dependencies -->
		<dependency>
			<groupId>org.quickperf</groupId>
			<artifactId>quick-perf-junit5</artifactId>
			<version>${quickperf.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.quickperf</groupId>
			<artifactId>quick-perf-springboot2-sql-starter</artifactId>
			<version>${quickperf.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- End of QuickPerf dependencies -->
	</dependencies>

	<build>

		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>${maven-enforcer-plugin.version}</version>
				<executions>
					<execution>
						<id>enforce</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<banDuplicatePomDependencyVersions/>
								<requireMavenVersion>
									<version>${maven.version}</version>
									<message>Invalid Maven version. It should, at least, be ${maven.version}</message>
								</requireMavenVersion>
								<requireJavaVersion>
									<version>${java.version}</version>
									<message>Invalid Java version. It should, at least, be ${java.version}</message>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.diffplug.spotless</groupId>
				<artifactId>spotless-maven-plugin</artifactId>
				<version>${spotless-maven-plugin.version}</version>
				<configuration>
					<java>
						<includes>
							<include>src/main/java/**/*.java</include> <!-- Check application code -->
							<include>src/test/java/**/*.java</include> <!-- Check application tests code -->
						</includes>
						<importOrder /> <!-- standard import order -->
						<removeUnusedImports /> <!-- remove unused imports -->
						<googleJavaFormat>
							<style>AOSP</style> <!-- or GOOGLE (optional) -->
						</googleJavaFormat>
					</java>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
							<goal>apply</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${mapstruct.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>

		<profile>
			<id>UT</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${maven.surefire.version}</version>
						<configuration>
							<excludes>
								<exclude>**/performance/**Test.java</exclude>
								<exclude>**/integration/**Test.java</exclude>
								<exclude>**/architecture/**Test.java</exclude>
							</excludes>
							<argLine>-Dfile.encoding=UTF-8</argLine>
							<argLine>-XX:+EnableDynamicAgentLoading</argLine>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>AR</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${maven.surefire.version}</version>
						<configuration>
							<excludes>
								<exclude>**/performance/**Test.java</exclude>
								<exclude>**/integration/**Test.java</exclude>
								<exclude>**/unit/**Test.java</exclude>
							</excludes>
							<argLine>-Dfile.encoding=UTF-8</argLine>
							<argLine>-XX:+EnableDynamicAgentLoading</argLine>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>IT</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${maven.surefire.version}</version>
						<configuration>
							<includes>
								<include>**/ApiITTest.java</include>
							</includes>
							<excludes>
								<exclude>**/performance/**Test.java</exclude>
								<exclude>**/unit/**Test.java</exclude>
								<exclude>**/architecture/**Test.java</exclude>
							</excludes>
							<argLine>-Dfile.encoding=UTF-8</argLine>
							<argLine>-XX:+EnableDynamicAgentLoading</argLine>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>PE</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${maven.surefire.version}</version>
						<configuration>
							<excludes>
								<exclude>**/unit/**Test.java</exclude>
								<exclude>**/architecture/**Test.java</exclude>
								<exclude>**/integration/**Test.java</exclude>
							</excludes>
							<argLine>-Dfile.encoding=UTF-8</argLine>
							<argLine>-XX:+EnableDynamicAgentLoading</argLine>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>MT</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-maven</artifactId>
						<version>${pitest-maven.version}</version>

						<configuration>
							<outputFormats>
								<outputFormat>HTML</outputFormat>
								<outputFormat>XML</outputFormat>
							</outputFormats>
							<targetClasses>
								<param>com.twa.flights.api.reservation.*</param>
							</targetClasses>
							<targetTests>
								<param>com.twa.flights.api.reservation.*</param>
							</targetTests>
							<excludedClasses>
								<excludedClass>com.twa.flights.api.reservation.repository.*</excludedClass>
								<excludedClass>com.twa.flights.api.reservation.dto.*</excludedClass>
								<excludedClass>com.twa.flights.api.reservation.enums.*</excludedClass>
							</excludedClasses>
							<excludedMethods>
								<excludedMethod>convert</excludedMethod>
							</excludedMethods>
						</configuration>
						<dependencies>
							<dependency>
								<groupId>org.pitest</groupId>
								<artifactId>pitest-junit5-plugin</artifactId>
								<version>${pitest-junit5-plugin.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
